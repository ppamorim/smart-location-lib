buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'org.robolectric:robolectric-gradle-plugin:1.0.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'org.robolectric'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'


version '3.0.8-SNAPSHOT'
group 'io.nlopez.smartlocation'

robolectric {
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'
}

dependencies {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    compile 'com.google.android.gms:play-services-location:6.5.87'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0-SNAPSHOT'
    testCompile 'org.robolectric:robolectric-shadows:3.0-SNAPSHOT'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    buildTypes {
        defaultConfig {
            minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK)
            targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
            versionCode 20005
            versionName version
            testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {
            artifact "build/libs/SmartLocation-${version}.aar"
            artifactId 'library'
        }
    }
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

//uploadArchives {
//    configuration = configurations.archives
//    repositories.mavenDeployer {
//        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//        repository(url: sonatypeRepo) {
//            authentication(userName: sonatypeUsername,
//                    password: sonatypePassword)
//        }
//        snapshotRepository(url: sonatypeSnapshotRepo) {
//            authentication(userName: sonatypeUsername,
//                    password: sonatypePassword)
//        }
//
//        pom.project {
//            name 'Smart Location Library'
//            packaging 'aar'
//            description 'This library handles all the boilerplate and repetitive code used when playing with Locations in Android projects.'
//            url 'https://github.com/mrmans0n/smart-location-lib'
//            artifactId 'library'
//
//            scm {
//                url 'scm:git@github.com:mrmans0n/smart-location-lib.git'
//                connection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
//                developerConnection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
//            }
//
//            licenses {
//                license {
//                    name 'MIT license'
//                    url 'http://www.opensource.org/licenses/mit-license.php'
//                    distribution 'repo'
//                }
//            }
//
//            developers {
//                developer {
//                    id 'mrmans0n'
//                    name 'Nacho Lopez'
//                    email 'nacho@nlopez.io'
//                }
//            }
//        }
//    }
//}
